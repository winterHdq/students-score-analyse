{"version":3,"file":"js/test-view.faf4ed3c.js","mappings":"wLAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,YAAY,CAACG,YAAY,CAAC,QAAU,gBAAgBC,MAAM,CAAC,OAAS,GAAG,OAAS,WAAW,eAAc,EAAM,YAAYN,EAAIO,SAAS,YAAYP,EAAIQ,qBAAqB,CAACN,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,YAAY,CAACN,EAAIS,GAAG,SAAS,GAAGP,EAAG,YAAY,CAACQ,GAAG,CAAC,MAAQV,EAAIW,cAAc,CAACX,EAAIS,GAAG,QAAQP,EAAG,YAAY,CAACQ,GAAG,CAAC,MAAQV,EAAIY,YAAY,CAACZ,EAAIS,GAAG,WAAW,EAC9c,EACII,EAAkB,G,mBCiBtB,GACAC,KAAAA,YACAC,WAAAA,CAAAA,EACAC,OAAAA,GACAC,MAAAA,CAAAA,EACAC,OACA,OACAX,SAAAA,GACAY,UAAAA,CACA,YACA,UACA,WAEAC,YAAAA,CACA,CACAC,KAAAA,KACAC,KAAAA,IAEA,CACAD,KAAAA,KACAC,KAAAA,KAGAC,YAAAA,CACA,CACAF,KAAAA,KACAG,KAAAA,IAEA,CACAH,KAAAA,KACAG,KAAAA,KAIA,EACAC,UAAAA,EACAC,UAAAA,EACAC,QAAAA,CAEAnB,mBAAAA,GACA,iCACA,sDACA,+CACA,uBACAoB,EAAAA,kBAAAA,EAAAA,KACAA,EAAAA,OAAAA,IACA,wBAEA,cACAC,KAAAA,WAGAC,EAAAA,WAAAA,SAAAA,IACA,6CACAC,QAAAA,IAAAA,EAAAA,GACA,CAEA,EACAnB,YACA,6BAGA,OACA,CAAAoB,EAAAA,cAAAC,EAAAA,IAAAC,EAAAA,CAAAC,KAAAA,CAAArB,KAAAA,UAAAsB,GAAAA,MACA,CACAJ,EAAAA,GACAC,EAAAA,IACAC,EAAAA,CACAC,KAAAA,CAAAE,MAAAA,EAAAC,MAAAA,CAAAC,IAAAA,WACAC,UAAAA,CAAAC,SAAAA,SAAAC,WAAAA,YAGA,CACAV,EAAAA,eACAC,EAAAA,IACAC,EAAAA,CACAC,KAAAA,CAAAE,MAAAA,EAAAC,MAAAA,CAAAC,IAAAA,WACAC,UAAAA,CAAAC,SAAAA,SAAAC,WAAAA,YAGA,CACAV,EAAAA,cACAC,EAAAA,IACAC,EAAAA,CAAAS,KAAAA,CAAAC,QAAAA,CAAAL,IAAAA,aAEA,CAAAP,EAAAA,cAAAC,EAAAA,IAAAC,EAAAA,CAAAM,UAAAA,CAAAK,UAAAA,MAIA,oCACAC,IAAAA,MAAAA,kBAAAA,EAAAA,EAAAA,eAGAA,IAAAA,UAAAA,EAAAA,0BACA,EAEAnC,cACA,6BAKA,yCAGAoC,EAAAA,GAAAA,EAAAA,CACAP,UAAAA,CACAC,SAAAA,SACAC,WAAAA,UAEAM,OAAAA,CACAC,IAAAA,CAAAC,MAAAA,UAAAZ,MAAAA,WAEAH,KAAAA,CACArB,KAAAA,KACAsB,GAAAA,KAGAU,IAAAA,MAAAA,kBAAAA,EAAAA,EAAAA,OACAA,IAAAA,UAAAA,EAAAA,YACA,IC3I8P,I,UCQ1PK,GAAY,OACd,EACApD,EACAc,GACA,EACA,KACA,WACA,MAIF,EAAesC,EAAiB,O","sources":["webpack://students-score-analyse/./src/views/test/index.vue","webpack://students-score-analyse/src/views/test/index.vue","webpack://students-score-analyse/./src/views/test/index.vue?e395","webpack://students-score-analyse/./src/views/test/index.vue?a99f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"Test\"},[_c('el-upload',{staticStyle:{\"display\":\"inline-block\"},attrs:{\"action\":\"\",\"accept\":\"xls,xlsx\",\"auto-upload\":false,\"file-list\":_vm.fileList,\"on-change\":_vm.uploadChangeHandle}},[_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"导入\")])],1),_c('el-button',{on:{\"click\":_vm.exportExcel}},[_vm._v(\"导出\")]),_c('el-button',{on:{\"click\":_vm.testExcel}},[_vm._v(\"测试导出\")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"Test\">\r\n    <el-upload\r\n      action=\"\"\r\n      accept=\"xls,xlsx\"\r\n      :auto-upload=\"false\"\r\n      :file-list=\"fileList\"\r\n      :on-change=\"uploadChangeHandle\"\r\n      style=\"display: inline-block\"\r\n    >\r\n      <el-button type=\"primary\">导入</el-button>\r\n    </el-upload>\r\n    <el-button @click=\"exportExcel\">导出</el-button>\r\n    <el-button @click=\"testExcel\">测试导出</el-button>\r\n  </div>\r\n</template>\r\n<script>\r\n// import * as XLSX from 'xlsx/xlsx.mjs'\r\nimport XLSX from 'xlsx-js-style'\r\nexport default {\r\n  name: 'Test-view',\r\n  components: {},\r\n  mixins: [],\r\n  props: {},\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      exportArr: [\r\n        ['姓名', '语文'],\r\n        ['小张', 90],\r\n        ['小红', 80]\r\n      ],\r\n      export1Data: [\r\n        {\r\n          姓名: '小张',\r\n          语文: 80\r\n        },\r\n        {\r\n          姓名: '小李',\r\n          语文: 88\r\n        }\r\n      ],\r\n      export2Data: [\r\n        {\r\n          姓名: '小张',\r\n          数学: 95\r\n        },\r\n        {\r\n          姓名: '小李',\r\n          数学: 90\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n  methods: {\r\n    // 导入\r\n    uploadChangeHandle(file) {\r\n      if (!/\\.(xls|xlsx)$/.test(file.name))\r\n        return this.$message.error('上传格式不正确，请上传xls/xlsx文件格式')\r\n      if (!file.raw) return this.$message.error('文件导入失败')\r\n      const reader = new FileReader()\r\n      reader.readAsArrayBuffer(file.raw)\r\n      reader.onload = ev => {\r\n        const data = ev.target.result\r\n        // 解析二进制格式数据\r\n        const workBook = XLSX.read(data, {\r\n          type: 'binary'\r\n        })\r\n        // 获取每张表格数据\r\n        workBook.SheetNames.forEach(name => {\r\n          const tableData = XLSX.utils.sheet_to_json(workBook.Sheets[name])\r\n          console.log(tableData)\r\n        })\r\n      }\r\n    },\r\n    testExcel() {\r\n      const wb = XLSX.utils.book_new()\r\n\r\n      // STEP 2: Create data rows and styles\r\n      let row = [\r\n        { v: 'Courier: 24', t: 's', s: { font: { name: 'Courier', sz: 24 } } },\r\n        {\r\n          v: 90,\r\n          t: 'n',\r\n          s: {\r\n            font: { bold: true, color: { rgb: 'FF0000' } },\r\n            alignment: { vertical: 'center', horizontal: 'center' }\r\n          }\r\n        },\r\n        {\r\n          v: 'bold & color',\r\n          t: 's',\r\n          s: {\r\n            font: { bold: true, color: { rgb: 'FF0000' } },\r\n            alignment: { vertical: 'center', horizontal: 'center' }\r\n          }\r\n        },\r\n        {\r\n          v: 'fill: color',\r\n          t: 's',\r\n          s: { fill: { fgColor: { rgb: 'E9E9E9' } } }\r\n        },\r\n        { v: 'line\\nbreak', t: 's', s: { alignment: { wrapText: true } } }\r\n      ]\r\n\r\n      // STEP 3: Create worksheet with rows; Add worksheet to workbook\r\n      const ws = XLSX.utils.aoa_to_sheet([row])\r\n      XLSX.utils.book_append_sheet(wb, ws, 'readme demo')\r\n\r\n      // STEP 4: Write Excel file to browser\r\n      XLSX.writeFile(wb, 'xlsx-js-style-demo.xlsx')\r\n    },\r\n    // 导出\r\n    exportExcel() {\r\n      const wb = XLSX.utils.book_new()\r\n      //   //   header可设置列名顺序\r\n      //   const sheet = XLSX.utils.json_to_sheet(this.export1Data, {\r\n      //     header: ['语文', '姓名']\r\n      //   })\r\n      const sheet2 = XLSX.utils.aoa_to_sheet(this.exportArr)\r\n      //   // 多张\r\n      //   XLSX.utils.book_append_sheet(wb, sheet, '表格1')\r\n      sheet2.B3.s = {\r\n        alignment: {\r\n          vertical: 'center', // 垂直居中\r\n          horizontal: 'center' // 水平居中\r\n        },\r\n        border: {\r\n          top: { style: 'dashDot', color: 'FFCC00' }\r\n        },\r\n        font: {\r\n          name: '宋体',\r\n          sz: 10\r\n        }\r\n      }\r\n      XLSX.utils.book_append_sheet(wb, sheet2, '表格2')\r\n      XLSX.writeFile(wb, `测试表格.xlsx`)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.Test {\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=66c6ba5d&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=66c6ba5d&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"66c6ba5d\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","attrs","fileList","uploadChangeHandle","_v","on","exportExcel","testExcel","staticRenderFns","name","components","mixins","props","data","exportArr","export1Data","姓名","语文","export2Data","数学","created","mounted","methods","reader","type","workBook","console","v","t","s","font","sz","bold","color","rgb","alignment","vertical","horizontal","fill","fgColor","wrapText","XLSX","sheet2","border","top","style","component"],"sourceRoot":""}