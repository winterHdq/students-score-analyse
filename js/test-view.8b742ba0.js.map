{"version":3,"file":"js/test-view.8b742ba0.js","mappings":"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","sources":["webpack://students-score-analyse/./src/views/test/index.vue","webpack://students-score-analyse/./node_modules/js-base64/base64.mjs","webpack://students-score-analyse/src/views/test/index.vue","webpack://students-score-analyse/./src/views/test/index.vue?ff29","webpack://students-score-analyse/./src/views/test/index.vue?fbae"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"Test\"},[_c('el-upload',{staticStyle:{\"display\":\"inline-block\"},attrs:{\"action\":\"\",\"accept\":\"xls,xlsx\",\"auto-upload\":false,\"file-list\":_vm.fileList,\"on-change\":_vm.uploadChangeHandle}},[_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"导入\")])],1),_c('el-button',{on:{\"click\":_vm.exportExcel}},[_vm._v(\"导出\")]),_c('el-button',{on:{\"click\":_vm.testExcel}},[_vm._v(\"测试导出\")]),_c('div',[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"请输入需要加解密的文字\"},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('p',[_vm._v(\"加密/解密后内容：\")]),_c('el-input',{attrs:{\"type\":\"textarea\"},model:{value:(_vm.encryptText),callback:function ($$v) {_vm.encryptText=$$v},expression:\"encryptText\"}}),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onEncrypt}},[_vm._v(\"aes加密\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onDecrypt}},[_vm._v(\"aes解密\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onBase64Encrypt}},[_vm._v(\"base64加密\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onBase64Decrypt}},[_vm._v(\"base64解密\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.5';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","<template>\r\n  <div class=\"Test\">\r\n    <el-upload\r\n      action=\"\"\r\n      accept=\"xls,xlsx\"\r\n      :auto-upload=\"false\"\r\n      :file-list=\"fileList\"\r\n      :on-change=\"uploadChangeHandle\"\r\n      style=\"display: inline-block\"\r\n    >\r\n      <el-button type=\"primary\">导入</el-button>\r\n    </el-upload>\r\n    <el-button @click=\"exportExcel\">导出</el-button>\r\n    <el-button @click=\"testExcel\">测试导出</el-button>\r\n    <div>\r\n      <el-input\r\n        v-model=\"text\"\r\n        type=\"textarea\"\r\n        placeholder=\"请输入需要加解密的文字\"\r\n      />\r\n      <p>加密/解密后内容：</p>\r\n      <el-input v-model=\"encryptText\" type=\"textarea\" />\r\n      <el-button type=\"primary\" @click=\"onEncrypt\">aes加密</el-button>\r\n      <el-button type=\"primary\" @click=\"onDecrypt\">aes解密</el-button>\r\n      <el-button type=\"primary\" @click=\"onBase64Encrypt\">base64加密</el-button>\r\n      <el-button type=\"primary\" @click=\"onBase64Decrypt\">base64解密</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n// import * as XLSX from 'xlsx/xlsx.mjs'\r\nimport { aesEncrypt, aesDecrypt } from '@/utils/aes'\r\nimport { encode, decode } from 'js-base64'\r\n\r\nimport XLSX from 'xlsx-js-style'\r\nexport default {\r\n  name: 'Test-view',\r\n  components: {},\r\n  mixins: [],\r\n  props: {},\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      text: '',\r\n      encryptText: '',\r\n      exportArr: [\r\n        ['姓名', '语文'],\r\n        ['小张', 90],\r\n        ['小红', 80]\r\n      ],\r\n      export1Data: [\r\n        {\r\n          姓名: '小张',\r\n          语文: 80\r\n        },\r\n        {\r\n          姓名: '小李',\r\n          语文: 88\r\n        }\r\n      ],\r\n      export2Data: [\r\n        {\r\n          姓名: '小张',\r\n          数学: 95\r\n        },\r\n        {\r\n          姓名: '小李',\r\n          数学: 90\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n  methods: {\r\n    // 导入\r\n    uploadChangeHandle(file) {\r\n      if (!/\\.(xls|xlsx)$/.test(file.name))\r\n        return this.$message.error('上传格式不正确，请上传xls/xlsx文件格式')\r\n      if (!file.raw) return this.$message.error('文件导入失败')\r\n      const reader = new FileReader()\r\n      reader.readAsArrayBuffer(file.raw)\r\n      reader.onload = ev => {\r\n        const data = ev.target.result\r\n        // 解析二进制格式数据\r\n        const workBook = XLSX.read(data, {\r\n          type: 'binary'\r\n        })\r\n        // 获取每张表格数据\r\n        workBook.SheetNames.forEach(name => {\r\n          const tableData = XLSX.utils.sheet_to_json(workBook.Sheets[name])\r\n          console.log(tableData)\r\n        })\r\n      }\r\n    },\r\n    testExcel() {\r\n      const wb = XLSX.utils.book_new()\r\n\r\n      // STEP 2: Create data rows and styles\r\n      let row = [\r\n        { v: 'Courier: 24', t: 's', s: { font: { name: 'Courier', sz: 24 } } },\r\n        {\r\n          v: 90,\r\n          t: 'n',\r\n          s: {\r\n            font: { bold: true, color: { rgb: 'FF0000' } },\r\n            alignment: { vertical: 'center', horizontal: 'center' }\r\n          }\r\n        },\r\n        {\r\n          v: 'bold & color',\r\n          t: 's',\r\n          s: {\r\n            font: { bold: true, color: { rgb: 'FF0000' } },\r\n            alignment: { vertical: 'center', horizontal: 'center' }\r\n          }\r\n        },\r\n        {\r\n          v: 'fill: color',\r\n          t: 's',\r\n          s: { fill: { fgColor: { rgb: 'E9E9E9' } } }\r\n        },\r\n        { v: 'line\\nbreak', t: 's', s: { alignment: { wrapText: true } } }\r\n      ]\r\n\r\n      // STEP 3: Create worksheet with rows; Add worksheet to workbook\r\n      const ws = XLSX.utils.aoa_to_sheet([row])\r\n      XLSX.utils.book_append_sheet(wb, ws, 'readme demo')\r\n\r\n      // STEP 4: Write Excel file to browser\r\n      XLSX.writeFile(wb, 'xlsx-js-style-demo.xlsx')\r\n    },\r\n    // 导出\r\n    exportExcel() {\r\n      const wb = XLSX.utils.book_new()\r\n      //   //   header可设置列名顺序\r\n      //   const sheet = XLSX.utils.json_to_sheet(this.export1Data, {\r\n      //     header: ['语文', '姓名']\r\n      //   })\r\n      const sheet2 = XLSX.utils.aoa_to_sheet(this.exportArr)\r\n      //   // 多张\r\n      //   XLSX.utils.book_append_sheet(wb, sheet, '表格1')\r\n      sheet2.B3.s = {\r\n        alignment: {\r\n          vertical: 'center', // 垂直居中\r\n          horizontal: 'center' // 水平居中\r\n        },\r\n        border: {\r\n          top: { style: 'dashDot', color: 'FFCC00' }\r\n        },\r\n        font: {\r\n          name: '宋体',\r\n          sz: 10\r\n        }\r\n      }\r\n      XLSX.utils.book_append_sheet(wb, sheet2, '表格2')\r\n      XLSX.writeFile(wb, `测试表格.xlsx`)\r\n    },\r\n    onEncrypt() {\r\n      if (!this.text) return\r\n      this.encryptText = aesEncrypt(this.text)\r\n    },\r\n    onDecrypt() {\r\n      if (!this.text) return\r\n      this.encryptText = aesDecrypt(this.text)\r\n    },\r\n    onBase64Encrypt() {\r\n      if (!this.text) return\r\n      this.encryptText = encode(this.text)\r\n    },\r\n    onBase64Decrypt() {\r\n      if (!this.text) return\r\n      this.encryptText = decode(this.text)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=3f9b8db6&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3f9b8db6\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","attrs","fileList","uploadChangeHandle","_v","on","exportExcel","testExcel","model","value","text","callback","$$v","expression","encryptText","onEncrypt","onDecrypt","onBase64Encrypt","onBase64Decrypt","staticRenderFns","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","undefined","_TE","TextEncoder","b64ch","b64chs","Array","prototype","slice","call","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","length","charCodeAt","TypeError","substring","_btoa","toString","_fromUint8Array","u8a","maxargs","strs","l","push","apply","subarray","join","cb_utob","cc","re_utob","utob","u","_encode","encode","urlsafe","re_btou","cb_btou","cccc","cp","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","split","map","_decode","decode","_unURI","name","components","mixins","props","data","exportArr","export1Data","姓名","语文","export2Data","数学","created","mounted","methods","reader","type","workBook","console","v","t","font","sz","bold","color","rgb","alignment","vertical","horizontal","fill","fgColor","wrapText","XLSX","sheet2","border","top","style","component"],"sourceRoot":""}